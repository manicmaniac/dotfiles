[push]
  default = current
[color]
  ui = auto
[alias]
  aa = add --all
  amend = commit --amend
  ap = add --patch
  branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
  ca = commit --amend -v
  ci = commit -v
  co = checkout
  co-pr = !sh -c 'git fetch origin pull/$1/head:pr/$1 && git checkout pr/$1' -
  conflicts = diff --name-only --diff-filter=U
  create-branch = !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
  ctags = "!sh -c '[ -f .git/hooks/ctags ] || git init; .git/hooks/ctags' git-ctags"
  current-branch = !sh -c 'git rev-parse --abbrev-ref HEAD' -
  delete-branch = !sh -c 'git push origin :refs/heads/$1 && git branch -D $1' -
  discard = checkout --
  graph = log --graph -10 --branches --remotes --tags  --format=format:'%Cgreen%h %Creset- %<(50,trunc)%s (%cN, %cr) %Cred%d' --date-order
  merge-branch = !git checkout master && git merge @{-1}
  nevermind = !git reset --hard HEAD && git clean -d -f
  pr = !hub pull-request
  precommit = diff --cached --diff-algorithm=minimal -w
  prestage = diff -w --word-diff=color
  remotes = remote -v
  rename-branch = !sh -c 'old=$(git current-branch) && git branch -m $old $1 && git push origin --set-upstream $1 && git push origin --delete $old' -
  root = rev-parse --show-toplevel
  safe = !mkdir "`git rev-parse --show-toplevel`/.git/safe"
  shallow-clone = clone --depth 1 --single-branch
  st = status
  stashes = stash list
  tags = tag --list --sort=version:refname
  unmerged = diff --name-only --diff-filter=U
  unsafe = !rmdir "`git rev-parse --show-toplevel`/.git/safe"
  unstage = reset -q HEAD --
  untrack = rm -r --cached
  up = !git fetch origin && git rebase origin/master
[core]
  excludesfile = ~/.gitignore
  autocrlf = input
  quotepath = false
[merge]
  ff = only
[commit]
  template = ~/.gitmessage
[fetch]
  prune = true
[include]
  path = ~/.gitconfig.local
[status]
  branch = true
  short = true
  showUntrackedFiles = all
# [url "git@github.com:"]
# 	pushinsteadof = https://github.com/
